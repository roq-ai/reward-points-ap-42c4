generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model address {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  block              String?  @db.VarChar(255)
  lot                String?  @db.VarChar(255)
  qualification_code String?  @db.VarChar(255)
  address_address    String   @db.VarChar(255)
  user_id            String   @db.Uuid
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @db.Timestamp(6)
  user               user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model card {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  card_number  String   @db.VarChar(20)
  card_pin     String   @db.VarChar(4)
  phone_number String   @db.VarChar(20)
  user_id      String   @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model customer {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model merchant {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String        @db.VarChar(255)
  merchant_address String        @db.VarChar(255)
  phone_number     String        @db.VarChar(20)
  email            String        @db.VarChar(255)
  description      String?       @db.VarChar(255)
  created_at       DateTime      @default(now()) @db.Timestamp(6)
  updated_at       DateTime      @default(now()) @db.Timestamp(6)
  transaction      transaction[]
}

model transaction {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  transaction_date DateTime @db.Timestamp(6)
  amount           Int
  reward_points    Int
  fiscal_year      Int
  user_id          String   @db.Uuid
  merchant_id      String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  merchant         merchant @relation(fields: [merchant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  address     address[]
  card        card[]
  customer    customer[]
  transaction transaction[]
}
